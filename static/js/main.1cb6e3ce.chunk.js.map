{"version":3,"sources":["store/reducers/companies.reducer.js","store/reducers/index.js","store/index.js","base-api.js","app/routes/protected-route/Auth.js","app/login/index.jsx","app/shared/menu-bar/index.jsx","app/landing-page/settings/index.jsx","app/requests/BaseRequest.js","app/requests/endpoints/companies.endpoint.js","store/actions/companies.actions.js","app/requests/socket/socket.client.js","app/requests/endpoints/vehicles.endpoint.js","app/shared/vehicle/timer/index.jsx","app/shared/vehicle/index.jsx","app/shared/vehicle-list/index.jsx","app/shared/company-list/index.jsx","app/landing-page/register/index.jsx","app/requests/endpoints/flow-records.endpoint.js","app/landing-page/timeline/index.jsx","app/shared/not-found/index.jsx","app/landing-page/index.jsx","app/routes/protected-route/index.jsx","app/routes/index.jsx","index.jsx"],"names":["INITIAL_STATE","selectedVehicle","selectedCompany","source","reducer","state","action","type","combineReducers","companies","store","createStore","rootReducer","session","JSON","parse","localStorage","getItem","this","bearer","token","user","callback","login","password","userFormatted","url","base","body","stringify","fetch","method","headers","resp","status","json","message","setItem","isAuthenticated","Login","history","useState","setLogin","setPassword","messages","setMessages","useEffect","auth","push","id","className","href","htmlFor","Input","placeholder","onChange","value","map","Message","description","Button","appearance","onClick","e","button","target","disabled","authenticated","errors","MenuBar","current","currentUser","setCurrentUser","name","split","firstName","middleName","Sidenav","activeKey","Header","to","Whisper","placement","trigger","speaker","Tooltip","Icon","icon","logout","style","backgroundImage","admin","manager","operator","role","Body","Nav","Item","eventKey","Settings","request","a","api","main","uri","response","company","items","companyId","fleet","setCompanies","selectVehicle","vehicle","selectCompany","socket","io","connect","baseApi","autoConnect","vehicleId","moment","console","error","query","Timer","start","max","onEnd","calcPermanence","permanence","setPermanence","duration","Date","diff","interval","clearTimeout","setTimeout","asMilliseconds","format","dispatch","bindActionCreators","CompaniesActions","companyName","loading","setLoading","arrival","v","vehicleAPI","last_record","onGarage","emit","departure","license_plate","number","Loader","VehicleList","showAll","setShowAll","slice","setFleet","changeView","all","open","on","close","key","length","toLowerCase","CompanyList","borderColor","color","thumbnail","founded","setFounded","companiesAPI","load","fleetsPromises","getFleet","Promise","then","fleets","i","Popover","Toggle","log","InputGroup","inside","flowRecord","chartData","setChartData","historyPromises","flowRecordsAPI","getHistoric","histories","forEach","index","reverse","record","DateRangePicker","width","height","chartType","loader","data","options","showRowNumber","NotFound","search","LandingPage","match","currentView","setCurrentView","params","view","ProtectedRoute","Component","component","rest","render","props","pathname","from","location","Routes","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1cb6e3ce.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  selectedVehicle: null,\n  selectedCompany: null,\n  source: []\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n\n    case 'SET_COMPANIES':\n      return { ...state, source: action.source };\n\n    case 'SELECT_VEHICLE':\n      return { ...state, selectedVehicle: action.selectedVehicle };\n\n    case 'SELECT_COMPANY':\n      return { ...state, selectedCompany: action.selectedCompany };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport companies from './companies.reducer';\n\nexport default combineReducers ({\n    companies\n});","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(rootReducer);\n\nexport default store;","export default \"http://localhost:8080\";  // \"https://flux-control-node-api.herokuapp.com\";","import base from '../../../base-api';\n\nclass Auth {\n\n  constructor() {\n    let session = JSON.parse(localStorage.getItem('session'));\n    this.bearer = session?.token || \"\";\n  }\n\n  async login(user = {}, callback) {\n\n    const { login, password } = user;\n\n    const userFormatted = {\n      'email': login,\n      'password': password\n    };\n\n    const url = `${base}/api/users/login`;\n    const body = JSON.stringify(userFormatted);\n\n    let resp = await fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    });\n\n    if (resp.status === 200) {\n      const session = await resp.json();\n      this.bearer = session.token;\n\n      delete session.message;\n      localStorage.setItem('session', JSON.stringify(session));\n    }\n\n    callback(this.isAuthenticated());\n  }\n\n  logout() {\n    this.bearer = null;\n    localStorage.setItem('session', null);\n  }\n\n  isAuthenticated() {\n    return !!this.bearer;\n  }\n}\n\nexport default new Auth();\n","import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\nimport { Input, Button, Message } from 'rsuite';\n\nimport auth from '../routes/protected-route/Auth';\n\n\nfunction Login ({ history }) {\n\n  const [login, setLogin] = useState(\"login\");\n  const [password, setPassword] = useState(\"password\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (auth.isAuthenticated()) {\n      history.push('/flux-control-client/');\n    }\n  });\n\n  return (\n    <main id=\"login\">\n      <div className=\"login\">\n        <div className=\"extra\">\n          <h2>Transparência</h2>\n          <p>\n            Aqui você pode ver a situação de todas as empresas de ônibus que utilizam do\n            terminal rodoviário de <b>São José do Rio Preto</b>.\n          </p>\n          <a href=\"#mais-sobre\">Vamos lá</a>\n        </div>\n        <section className=\"login-box\">\n        <div className=\"login-title\">\n          <h1>Login</h1>\n        </div>\n        <div className=\"login-field\">\n          <label htmlFor=\"email\">Email</label>\n          <Input id=\"email\" type=\"text\" placeholder=\"email@example.com\" onChange={\n            value => setLogin(value)\n          } />\n        </div>\n        <div className=\"login-field\">\n          <label htmlFor=\"password\">Senha</label>\n          <Input id=\"password\" type=\"password\" onChange={\n            value => setPassword(value)\n          } />\n        </div>\n        <div className=\"messages v-box\">\n          { messages.map(message =>\n            (<Message type=\"error\" description={message} />))\n          }\n        </div>\n        <Button className=\"login-submit\"\n          appearance=\"primary\"\n          onClick={(e) => {\n            const button = e.target;\n            button.disabled = true;\n            setMessages([]);\n\n            auth.login({ login, password },\n              (authenticated) => {\n                button.disabled = false;\n                if (authenticated) {\n                  history.push(\"/flux-control-client\");\n                } else {\n                  let errors = [];\n                  errors.push(\"Usuário e/ou senha incorreto(s)\");\n                  setMessages(errors);\n                }\n              }\n            );\n          }}\n        >Entrar</Button>\n      </section>\n    </div>\n    </main>\n  );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nimport { Sidenav, Nav, Icon, Tooltip, Whisper } from 'rsuite';\n\nimport auth from '../../routes/protected-route/Auth';\n\n\nfunction MenuBar ({ history, current }) {\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const session = JSON.parse(localStorage.getItem('session'));\n    const [firstName, middleName] = session.user.name.split(' ');\n    session.user.name = `${firstName} ${middleName}`;\n    setCurrentUser(session.user);\n  }, []);\n\n  return (\n    <div id=\"menu\">\n      <Sidenav activeKey={current}>\n        <Sidenav.Header>\n          <div>\n            <div id=\"user-actions\" className=\"h-box\">\n              <Link to=\"/flux-control-client/settings\">\n                <Whisper placement=\"auto\" trigger=\"hover\"\n                  speaker={\n                    <Tooltip>\n                      Configurações\n                    </Tooltip>\n                  }>\n                  <Icon icon=\"gear-circle\" />\n                </Whisper>\n              </Link>\n              <Link to=\"/flux-control-client/login\" onClick={() => auth.logout()}>\n              <Whisper placement=\"auto\" trigger=\"hover\"\n                speaker={\n                  <Tooltip>\n                    Sair\n                  </Tooltip>\n                }>\n                <Icon icon=\"sign-out\" />\n              </Whisper>\n              </Link>\n            </div>\n            <div id=\"user-info\" className=\"h-box\">\n              <div className=\"img\"\n                style={{\n                  backgroundImage: `url('https:api.adorable.io/avatars/100/abott@adorable.png')`\n                }}\n              >\n              </div>\n              <div className=\"name v-box\">\n                <b id=\"user-role\">\n                  {\n                    {\n                      admin: 'Administrador',\n                      manager: 'Gerente',\n                      operator: 'Operador'\n\n                    }[currentUser?.role]\n                  }\n                </b>\n                <span className=\"user-name\">{currentUser?.name}</span>\n              </div>\n            </div>\n          </div>\n        </Sidenav.Header>\n        <Sidenav.Body>\n          <Nav>\n            <Nav.Item eventKey={'register'} icon={<Icon icon=\"car\" />}\n              onClick={() => history.push('/flux-control-client/register')}\n            >\n              Registrar\n            </Nav.Item>\n            <Nav.Item eventKey={'timeline'} icon={<Icon icon=\"realtime\" />}\n              onClick={() => history.push('/flux-control-client/timeline')}\n            >\n              Linha do tempo\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </div>\n  );\n}\n\nexport default MenuBar;","import React from 'react';\nimport './index.scss';\n\n\nfunction Settings () {\n\n  return (\n    <section id=\"settings\">\n      Tela de Configurações\n    </section>\n  );\n}\n\nexport default Settings;","import base from '../../base-api';\nimport auth from '../routes/protected-route/Auth';\n\nconst request = async (user = { api: \"\", body: {}, method: \"POST\" }) => {\n\n    const url = `${base}/${user.api}`;\n\n    const body = JSON.stringify(user.body);\n\n    const main = {\n        method: user.method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"bearer \" + auth.bearer,\n        },\n    };\n\n    if(body) main.body = user.body;\n\n    let resp = await fetch(url, main);\n\n    return await resp.json();\n}\n\nexport default request;\n","import request from '../BaseRequest';\n\nclass CompaniesAPI {\n\n    constructor() {\n        this.uri = 'api/companies/';\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.company;\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async getFleet (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'fleet/' + companyId\n            });\n\n            return response.fleet || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async update (company) {\n\n        try {\n\n            const response = await request({\n                method: \"PATCH\",\n                api: this.uri + 'change',\n                body: company\n            });\n\n            return response.message === 'company_updated';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'company_deleted';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n};\n\nexport default new CompaniesAPI();","export function setCompanies (companies) {\n    return {\n        type: 'SET_COMPANIES',\n        source: companies\n    };\n}\n\nexport function selectVehicle (vehicle) {\n    return {\n        type: 'SELECT_VEHICLE',\n        selectedVehicle: vehicle\n    };\n}\n\nexport function selectCompany (company) {\n    return {\n        type: 'SELECT_COMPANY',\n        selectedCompany: company\n    };\n}","import io from 'socket.io-client';\nimport baseApi from '../../../base-api';\n\nconst socket = io.connect(baseApi, { autoConnect: false });\n\nexport default socket;","import request from '../BaseRequest';\n\nclass VehiclesAPI {\n\n    constructor() {\n        this.uri = 'api/vehicles/';\n    }\n\n    async arrival (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"POST\",\n                api: this.uri + 'arrival/' + vehicleId\n            });\n\n            return response.moment;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async departure (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"PUT\",\n                api: this.uri + 'departure/' + vehicleId\n            });\n\n            return response.moment;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async search (query) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'search?query=' + query\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async garage () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'garage'\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.vehicle;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async update (company) {\n\n        try {\n\n            const response = await request({\n                method: \"PATCH\",\n                api: this.uri + 'change',\n                body: company\n            });\n\n            return response.message === 'vehicle_updated';\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'vehicle_deleted';\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n};\n\nexport default new VehiclesAPI();","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\n\nfunction Timer({ start, max, onEnd }) {\n\n  const [permanence, setPermanence] = useState(calcPermanence(start));\n\n  function calcPermanence (start) {\n    return moment.duration(moment(new Date()).diff(moment(start)));\n  }\n\n  useEffect(() => {\n    let interval;\n    if (permanence > max) {\n      clearTimeout(interval);\n      onEnd();\n    } else {\n      interval = setTimeout(() => {\n        setPermanence(calcPermanence(start));\n      }, 1000);\n    }\n    return () => { clearTimeout(interval) }\n  }, [permanence]);\n\n  return (\n    <div className=\"timer\">\n      {moment(permanence.asMilliseconds()).format('mm:ss')}\n    </div>\n  );\n}\n\nexport default Timer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport moment from 'moment';\nimport { Button, Loader, Icon } from 'rsuite';\n\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\nimport vehicleAPI from '../../requests/endpoints/vehicles.endpoint';\nimport socket from '../../requests/socket/socket.client';\nimport Timer from './timer';\n\n\nconst Vehicle = ({ companyName, vehicle, companies, selectVehicle }) => {\n\n  const [loading, setLoading] = useState(false);\n\n  const arrival = async (v) => {\n    setLoading(true);\n    const moment = await vehicleAPI.arrival(v.id);\n    if (moment) {\n      v.last_record = { moment, onGarage: true };\n      socket.emit('vehicle-arrival', v);\n    }\n    setLoading(false);\n  }\n\n  const departure = async (v) => {\n    setLoading(true);\n    const moment = await vehicleAPI.departure(v.id);\n    if (moment) {\n      v.last_record = { moment, onGarage: false };\n      socket.emit('vehicle-departure', v);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <div\n        className={\n          `vehicle-card h-box\n          ${companies.selectedVehicle?.id === vehicle.id ? 'selected' : ''}\n          ${loading ? 'pulse' : ''}`\n        }\n        onClick={e => selectVehicle(companies.selectedVehicle?.id === vehicle.id ? null : vehicle)}\n      >\n        {/* Timer */}\n        {\n          vehicle.last_record.onGarage ?\n            <Timer\n              start={vehicle.last_record.moment}\n              max={moment.duration(15, 'minutes')}\n              onEnd={() => { departure(vehicle) }}\n            />\n          : null\n        }\n        {/* Vehicle data */}\n        <div className=\"vehicle-info v-box\">\n          <b className=\"license-plate\">{vehicle.license_plate}</b>\n          <span className=\"company-and-number\">{companyName} <b className=\"number\">#{vehicle.number}</b></span>\n        </div>\n        {/* Registry moment */}\n        {\n          loading ?\n          <div className=\"loader\">\n            <Loader />\n          </div> :\n          <>\n            <div className=\"last-record h-box\">\n              {\n                vehicle.last_record ?\n                  <Icon className={`icon ${vehicle.last_record.onGarage ? 'arrival' : 'departure'}`}\n                    icon={`${vehicle.last_record.onGarage ? 'caret-right' : 'caret-left'}`}\n                  />\n                  : <small className=\"no-record\">sem registro</small>\n              }\n              {\n                vehicle.last_record ?\n                  <span className=\"moment\">\n                    <small className=\"date\">\n                      {moment(vehicle.last_record.moment).format('DD/MM')}\n                    </small>\n                    <br/>\n                    {moment(vehicle.last_record.moment).format('HH:mm')}\n                  </span>\n                : null\n              }\n            </div>\n            <Button className=\"action\" appearance=\"primary\"\n              onClick={async (e) => {\n                vehicle.last_record?.onGarage ? await departure(vehicle) : await arrival(vehicle);\n              }}\n            >{vehicle.last_record?.onGarage ? 'Saída' : 'Entrada'}\n            </Button>\n          </>\n        }\n      </div>\n    </>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vehicle);","import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\nimport socket from '../../requests/socket/socket.client';\nimport Vehicle from '../../shared/vehicle';\n\n\nfunction VehicleList ({ company }) {\n\n  const [showAll, setShowAll] = useState(false);\n  const [fleet, setFleet] = useState(company.fleet.slice(0, 3));\n\n  const changeView = (all) => {\n    all ? setFleet(company.fleet) : setFleet(company.fleet.slice(0, 3));\n    setShowAll(all);\n  }\n\n  useEffect(() => {\n    socket.open();\n    socket.on('vehicle-action', v => {\n      company.fleet = company.fleet.map(vehicle => (vehicle.id === v.id) ? v : vehicle);\n      changeView(showAll);\n    });\n    return () => { socket.close() }\n  }, []);\n\n  return (\n    <>\n      <div className=\"vehicle-card-list h-box\">\n\n        {fleet.map(vehicle => (\n          <Vehicle key={vehicle.id}\n            companyName={company.name}\n            vehicle={vehicle}\n          />\n        ))}\n\n      </div>\n      {company.fleet.length > 3 ?\n        <a className=\"show-more\"\n          href={`#${company.name.toLowerCase()}-exibir-${showAll ? 'mais' : 'menos'}`}\n          onClick={(e) => { changeView(!showAll) }}\n        >{`exibir ${showAll ? 'menos' : 'mais'}`}</a>\n      : null}\n    </>\n  );\n}\n\nexport default VehicleList;","import React from \"react\";\nimport \"./index.scss\";\n\nimport VehicleList from \"../../shared/vehicle-list\";\n\n\nfunction CompanyList ({ companies }) {\n\n  return (\n    <>\n      {companies.map(company => (\n        <div key={company.id}>\n          {company.fleet.length ?\n            <div className=\"company v-box\">\n              <div className=\"company-info h-box\">\n                <div className=\"company-thumbnail\"\n                  style={{\n                    borderColor: company.color,\n                    backgroundImage: `url('${company.thumbnail || 'flux-control-client/images/no-image.jpg'}')`\n                  }}\n                ></div>\n                <h4 className=\"company-name\">{company.name}</h4>\n              </div>\n              <VehicleList company={company}/>\n            </div> : null\n          }\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default CompanyList;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport { Input, InputGroup, Toggle, Button, Whisper, Popover, Icon, Loader } from 'rsuite';\n\nimport companiesAPI from \"../../requests/endpoints/companies.endpoint\";\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\nimport CompanyList from '../../shared/company-list';\n\n\nfunction Register ({ companies, setCompanies }) {\n\n  const [loading, setLoading] = useState(false);\n  const [founded, setFounded] = useState(0);\n\n  async function load () {\n    setLoading(true);\n    const source = await companiesAPI.load();\n    const fleetsPromises = source.map(company => companiesAPI.getFleet(company.id));\n\n    Promise.all(fleetsPromises).then((fleets) => {\n      for (let i in source) {\n        source[i].fleet = fleets[i];\n      }\n\n      let founded = 0;\n      for (let company of source) {\n        founded += company.fleet.length;\n      }\n      setFounded(founded);\n\n      setCompanies(source);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <section id=\"register\">\n      <div className=\"container\">\n        <div className=\"vehicle-search h-box\">\n          <div className=\"pagination\">\n            <span className=\"results\">\n              <b>Encontrados:</b>\n              <span>{founded}</span>\n            </span>\n          </div>\n          <div className=\"search-box h-box\">\n            <Whisper trigger=\"click\" placement=\"auto\"\n              speaker={\n                <Popover className=\"toggle-on-garage\">\n                    <Toggle onChange={value => console.log(value)} />\n                    <span>Apenas na garagem</span>\n                </Popover>\n              }>\n                <Button className=\"filter\" appearance=\"default\">\n                  <Icon icon=\"filter\" /> &nbsp;\n                  Filtrar\n              </Button>\n            </Whisper>\n            <InputGroup inside>\n              <Input placeholder=\"Procurar\" />\n              <InputGroup.Button><Icon icon=\"search\" /></InputGroup.Button>\n            </InputGroup>\n          </div>\n        </div>\n        <hr/>\n        {loading ?\n          <center>\n            <Loader />\n          </center> :\n          <CompanyList companies={companies.source}/>}\n      </div>\n    </section>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import request from '../BaseRequest';\n\nclass FlowRecordsAPI {\n\n    constructor() {\n        this.uri = 'api/flow-records/';\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.flowRecord;\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async getHistoric (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'historic/' + vehicleId\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'company_deleted';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n};\n\nexport default new FlowRecordsAPI();","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport { Input, DateRangePicker, InputGroup, Button, Whisper, Popover, Icon, Loader } from 'rsuite';\nimport Chart from 'react-google-charts';\n\nimport flowRecordsAPI from '../../requests/endpoints/flow-records.endpoint';\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\n\n\nfunction Timeline({ companies, selectCompany }) {\n\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n\n  function load () {\n    setLoading(true);\n    if (companies.selectedCompany) {\n      const historyPromises = companies.selectedCompany.fleet.map((vehicle) => {\n        return flowRecordsAPI.getHistoric(vehicle.id);\n      });\n\n      let chartData = [\n        [\n          { type: 'string', id:'Vehicle' },\n          { type: 'date', id: 'Start' },\n          { type: 'date', id: 'End' }\n        ]\n      ];\n\n      Promise.all(historyPromises).then((histories) => {\n        histories.forEach((history, index) => {\n          history = history.reverse().slice(0, 6);\n          for (let record of history) {\n            chartData.push([\n              companies.selectedCompany.fleet[index].license_plate,\n              new Date(record.arrival.moment),\n              (record.departure?.moment ? new Date(record.departure.moment) : new Date())\n            ]);\n          }\n        });\n\n        setChartData(chartData);\n        setLoading(false);\n      });\n    }\n  }\n\n  useEffect(() => {\n    setChartData(null);\n    if (!companies.selectedCompany) {\n      selectCompany(companies.source[0]);\n    }\n    load();\n  }, [companies.selectedCompany]);\n\n  return (\n    <section id=\"timeline\" className=\"h-box\">\n      <div className=\"companies\">\n        {companies.source.map(company => (\n          company.fleet.length ?\n          <div key={company.id}\n            className={`${companies.selectedCompany?.id === company.id ? 'selected' : ''} company v-box`}\n            onClick={() => selectCompany(company)}\n          >\n            <div className=\"company-info h-box\">\n              <div className=\"company-thumbnail\"\n                style={{\n                  borderColor: company.color,\n                  backgroundImage: `url('${company.thumbnail || 'flux-control-client/images/no-image.jpg'}')`\n                }}\n              ></div>\n              <h4 className=\"company-name\">{company.name}</h4>\n              <span className=\"company-fleet h-box\">\n                <Icon icon=\"car\" />\n                <b>{company.fleet.length}</b>\n              </span>\n            </div>\n        </div> : null\n        ))}\n      </div>\n      <div className=\"container\">\n        <div className=\"vehicle-search h-box\">\n          <DateRangePicker />\n          <div className=\"search-box h-box\">\n            <Whisper trigger=\"click\" placement=\"auto\"\n              speaker={\n                <Popover className=\"toggle-on-garage\">\n                    FILTROS\n                </Popover>\n              }>\n                <Button className=\"filter\" appearance=\"default\">\n                  <Icon icon=\"filter\" /> &nbsp;\n                  Filtrar\n              </Button>\n            </Whisper>\n            <InputGroup inside>\n              <Input placeholder=\"Procurar\" />\n              <InputGroup.Button><Icon icon=\"search\" /></InputGroup.Button>\n            </InputGroup>\n          </div>\n        </div>\n        <hr/>\n        <div className=\"container-body\">\n          {chartData ?\n            <Chart\n            width=\"100%\"\n            height={300}\n            chartType=\"Timeline\"\n            loader={<center><Loader /></center>}\n            data={chartData}\n            options={{\n              showRowNumber: false\n            }}\n          /> : <center><Loader /></center>}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timeline);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\n\nfunction NotFound ({ search }) {\n\n    return (\n        <section id=\"not-found\">\n            <div className=\"content v-box\">\n                <h3>Ops! Nada por aqui</h3>\n                <p>Não encontramos nada que corresponda à <b>\"/{search}\"</b> para você.</p>\n                <br/>\n                <p>Possíveis causas:</p>\n                <ul>\n                    <li>Rota inexistente</li>\n                    <li>O serviço encontra-se indisponível</li>\n                    <li>Você não tem permissão para acessar o recurso</li>\n                </ul>\n\n                <small>\n                    <Link to=\"/flux-control-client/\">Voltar para o início</Link>\n                </small>\n            </div>\n        </section>\n    );\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\nimport MenuBar from '../shared/menu-bar';\nimport Settings from '../landing-page/settings';\nimport Register from '../landing-page/register';\nimport Timeline from '../landing-page/timeline';\nimport NotFound from '../shared/not-found';\n\n\nfunction LandingPage ({ history, match, ...props }) {\n\n  const [currentView, setCurrentView] = useState('register');\n\n  useEffect(() => {\n    if (match.params.view) {\n      setCurrentView(match.params.view);\n    } else {\n      history.push('/flux-control-client/register');\n    }\n  }, [history, match.params.view]);\n\n  return (\n    <>\n      <div id=\"geral\" className=\"h-box\">\n        <MenuBar history={history} current={currentView} />\n        <main id=\"screen\">\n          {currentView === 'settings' && <Settings />}\n          {currentView === 'register' && <Register />}\n          {currentView === 'timeline' && <Timeline />}\n          {<NotFound search={currentView} />}\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport auth from \"./Auth\";\n\n\nfunction ProtectedRoute ({ component: Component, ...rest }) {\n  return (\n    <Route {...rest} render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{ pathname: \"/flux-control-client/login\", state: { from: props.location } }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login from '../login';\nimport LandingPage from '../landing-page';\nimport ProtectedRoute from \"./protected-route\";\n\n\nfunction Routes () {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/flux-control-client/login\" component={Login} />\n        <ProtectedRoute exact path=\"/flux-control-client/:view?\" component={LandingPage} />\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport 'rsuite/dist/styles/rsuite-default.css'\n\nimport store from './store';\nimport Routes from './app/routes';\n\n\nfunction App () {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Routes />\n        </div>\n      </Provider>\n    );\n  }\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}