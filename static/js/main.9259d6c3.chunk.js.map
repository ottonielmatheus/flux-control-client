{"version":3,"sources":["serviceWorker.js","base-api.js","app/protected-route/Auth.js","app/login/index.jsx","app/shared/menu-bar/index.jsx","app/requests/BaseRequest.js","app/requests/endpoints/companies.endpoint.js","store/actions/companies.actions.js","app/requests/socket/socket.client.js","app/requests/endpoints/vehicles.endpoint.js","app/shared/vehicle/timer/index.jsx","app/shared/vehicle/index.jsx","app/shared/vehicle-list/index.jsx","app/shared/company-list/index.jsx","app/landing-page/register/index.jsx","app/requests/endpoints/flow-records.endpoint.js","app/landing-page/timeline/index.jsx","app/landing-page/index.jsx","app/protected-route/index.jsx","store/reducers/companies.reducer.js","store/reducers/index.js","store/index.js","index.jsx"],"names":["Boolean","window","location","hostname","match","session","JSON","parse","localStorage","getItem","this","bearer","token","user","callback","login","password","userFormatted","url","base","body","stringify","fetch","method","headers","resp","status","json","setItem","isAuthenticated","Login","history","useState","setLogin","setPassword","messages","setMessages","id","className","href","htmlFor","Input","type","placeholder","onChange","value","map","message","Message","description","Button","appearance","onClick","e","button","target","disabled","auth","authenticated","push","errors","MenuBar","current","switchTo","Sidenav","activeKey","Header","Whisper","placement","trigger","speaker","Tooltip","Icon","icon","logout","style","backgroundImage","Body","Nav","Item","eventKey","a","request","api","main","uri","response","company","items","companyId","fleet","setCompanies","companies","source","selectVehicle","vehicle","selectedVehicle","selectCompany","selectedCompany","socket","io","connect","baseApi","autoConnect","vehicleId","moment","console","error","query","Timer","start","max","onEnd","calcPermanence","permanence","setPermanence","duration","Date","diff","useEffect","interval","clearTimeout","setTimeout","asMilliseconds","format","state","dispatch","bindActionCreators","CompaniesActions","companyName","loading","setLoading","arrival","v","vehicleAPI","last_record","onGarage","emit","departure","license_plate","number","Loader","VehicleList","showAll","setShowAll","slice","setFleet","changeView","all","open","on","close","key","name","length","toLowerCase","CompanyList","borderColor","color","thumbnail","founded","setFounded","companiesAPI","load","fleetsPromises","getFleet","Promise","then","fleets","i","Popover","Toggle","log","InputGroup","inside","flowRecord","chartData","setChartData","setSelectedCompany","historyPromises","flowRecordsAPI","getHistoric","histories","forEach","index","reverse","record","DateRangePicker","width","height","chartType","loader","data","options","showRowNumber","LandingPage","switchScream","setSwitchScream","screen","ProtectedRoute","Component","component","rest","render","props","to","pathname","from","INITIAL_STATE","reducer","action","combineReducers","store","createStore","rootReducer","ReactDOM","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9259d6c3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default  \"https://flux-control-node-api.herokuapp.com\"; // \"http://localhost:8080\"","import base from '../../base-api';\n\nclass Auth {\n\n  constructor() {\n    let session = JSON.parse(localStorage.getItem('session'));\n    this.bearer = session?.token || \"\";\n  }\n\n  async login(user = {}, callback) {\n\n    const { login, password } = user;\n\n    const userFormatted = {\n      'email': login,\n      'password': password\n    };\n\n    const url = `${base}/api/users/login`;\n    const body = JSON.stringify(userFormatted);\n\n    let resp = await fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    });\n\n    if (resp.status === 200) {\n      const session = await resp.json();\n      this.bearer = session.token;\n      localStorage.setItem('session', JSON.stringify(session));\n    }\n\n    callback(this.isAuthenticated());\n  }\n\n  logout() {\n    localStorage.setItem('session', null);\n  }\n\n  isAuthenticated() {\n    return !!this.bearer;\n  }\n}\n\nexport default new Auth();\n","import React, { useState } from 'react';\nimport './index.scss';\n\nimport { Input, Button, Message } from 'rsuite';\n\nimport auth from '../protected-route/Auth';\n\n\nfunction Login ({ history }) {\n\n  const [login, setLogin] = useState(\"login\");\n  const [password, setPassword] = useState(\"password\");\n  const [messages, setMessages] = useState([]);\n\n  return (\n    <main id=\"login\">\n      <div className=\"login\">\n        <div className=\"extra\">\n          <h2>Transparência</h2>\n          <p>\n            Aqui você pode ver a situação de todas as empresas de ônibus que utilizam do\n            terminal rodoviário de <b>São José do Rio Preto</b>.\n          </p>\n          <a href=\"#mais-sobre\">Vamos lá</a>\n        </div>\n        <section className=\"login-box\">\n        <div className=\"login-title\">\n          <h1>Login</h1>\n        </div>\n        <div className=\"login-field\">\n          <label htmlFor=\"email\">Email</label>\n          <Input id=\"email\" type=\"text\" placeholder=\"email@example.com\" onChange={\n            value => setLogin(value)\n          } />\n        </div>\n        <div className=\"login-field\">\n          <label htmlFor=\"password\">Senha</label>\n          <Input id=\"password\" type=\"password\" onChange={\n            value => setPassword(value)\n          } />\n        </div>\n        <div className=\"messages v-box\">\n          { messages.map(message =>\n            (<Message type=\"error\" description={message} />))\n          }\n        </div>\n        <Button className=\"login-submit\"\n          appearance=\"primary\"\n          onClick={(e) => {\n            const button = e.target;\n            button.disabled = true;\n            setMessages([]);\n\n            auth.login({ login, password },\n              (authenticated) => {\n                button.disabled = false;\n                if (authenticated) {\n                  history.push(\"/flux-control-front\");\n                } else {\n                  let errors = [];\n                  errors.push(\"Usuário e/ou senha incorreto(s)\");\n                  setMessages(errors);\n                }\n              }\n            );\n          }}\n        >Entrar</Button>\n      </section>\n    </div>\n    </main>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport './index.scss';\n\nimport { Sidenav, Nav, Icon, Tooltip, Whisper } from 'rsuite';\n\nimport auth from '../../protected-route/Auth';\n\n\nfunction MenuBar ({ current, switchTo }) {\n\n  return (\n    <div id=\"menu\">\n      <Sidenav activeKey={current}>\n        <Sidenav.Header>\n          <div>\n            <div id=\"user-actions\" className=\"h-box\">\n              <a href=\"#configs\">\n                <Whisper placement=\"auto\" trigger=\"hover\"\n                  speaker={\n                    <Tooltip>\n                      Configurações\n                    </Tooltip>\n                  }>\n                  <Icon icon=\"gear-circle\" />\n                </Whisper>\n              </a>\n              <a href=\"#sair\">\n              <Whisper placement=\"auto\" trigger=\"hover\"\n                speaker={\n                  <Tooltip>\n                    Sair\n                  </Tooltip>\n                }>\n                <Icon icon=\"sign-out\" onClick={() => auth.logout()} />\n              </Whisper>\n              </a>\n            </div>\n            <div id=\"user-info\" className=\"h-box\">\n              <div className=\"img\"\n                style={{\n                  backgroundImage: `url('https:api.adorable.io/avatars/100/abott@adorable.png')`\n                }}\n              >\n              </div>\n              <div className=\"name v-box\">\n                <b id=\"user-role\">Gerente</b>\n                <span className=\"user-name\">Ottoniel Matheus</span>\n              </div>\n            </div>\n          </div>\n        </Sidenav.Header>\n        <Sidenav.Body>\n          <Nav>\n            <Nav.Item eventKey={'register'} icon={<Icon icon=\"car\" />}\n              onClick={() => switchTo('register')}\n            >\n              Registrar\n            </Nav.Item>\n            <Nav.Item eventKey={'timeline'} icon={<Icon icon=\"realtime\" />}\n              onClick={async () => switchTo('timeline')}\n            >\n              Linha do tempo\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </div>\n  );\n}\n\nexport default MenuBar;","import base from '../../base-api';\nimport auth from '../protected-route/Auth';\n\nconst request = async (user = { api: \"\", body: {}, method: \"POST\" }) => {\n\n    const url = `${base}/${user.api}`;\n\n    const body = JSON.stringify(user.body);\n\n    const main = {\n        method: user.method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"bearer \" + auth.bearer,\n        },\n    };\n\n    if(body) main.body = user.body;\n\n    let resp = await fetch(url, main);\n\n    return await resp.json();\n}\n\nexport default request;\n","import request from '../BaseRequest';\n\nclass CompaniesAPI {\n\n    constructor() {\n        this.uri = 'api/companies/';\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.company;\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async getFleet (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'fleet/' + companyId\n            });\n\n            return response.fleet || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async update (company) {\n\n        try {\n\n            const response = await request({\n                method: \"PATCH\",\n                api: this.uri + 'change',\n                body: company\n            });\n\n            return response.message === 'company_updated';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'company_deleted';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n};\n\nexport default new CompaniesAPI();","export function setCompanies (companies) {\n    return {\n        type: 'SET_COMPANIES',\n        source: companies\n    };\n}\n\nexport function selectVehicle (vehicle) {\n    return {\n        type: 'SELECT_VEHICLE',\n        selectedVehicle: vehicle\n    };\n}\n\nexport function selectCompany (company) {\n    return {\n        type: 'SELECT_COMPANY',\n        selectedCompany: company\n    };\n}","import io from 'socket.io-client';\nimport baseApi from '../../../base-api';\n\nconst socket = io.connect(baseApi, { autoConnect: false });\n\nexport default socket;","import request from '../BaseRequest';\n\nclass VehiclesAPI {\n\n    constructor() {\n        this.uri = 'api/vehicles/';\n    }\n\n    async arrival (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"POST\",\n                api: this.uri + 'arrival/' + vehicleId\n            });\n\n            return response.moment;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async departure (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"PUT\",\n                api: this.uri + 'departure/' + vehicleId\n            });\n\n            return response.moment;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async search (query) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'search?query=' + query\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async garage () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'garage'\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.vehicle;\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return [];\n        }\n    }\n\n    async update (company) {\n\n        try {\n\n            const response = await request({\n                method: \"PATCH\",\n                api: this.uri + 'change',\n                body: company\n            });\n\n            return response.message === 'vehicle_updated';\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'vehicle_deleted';\n        }\n\n        catch (ex) {\n            console.error(ex);\n            return null;\n        }\n    }\n};\n\nexport default new VehiclesAPI();","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\n\nfunction Timer({ start, max, onEnd }) {\n\n  const [permanence, setPermanence] = useState(calcPermanence(start));\n\n  function calcPermanence (start) {\n    return moment.duration(moment(new Date()).diff(moment(start)));\n  }\n\n  useEffect(() => {\n    let interval;\n    if (permanence > max) {\n      clearTimeout(interval);\n      onEnd();\n    } else {\n      interval = setTimeout(() => {\n        setPermanence(calcPermanence(start));\n      }, 1000);\n    }\n    return () => { clearTimeout(interval) }\n  }, [permanence]);\n\n  return (\n    <div className=\"timer\">\n      {moment(permanence.asMilliseconds()).format('mm:ss')}\n    </div>\n  );\n}\n\nexport default Timer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport moment from 'moment';\nimport { Button, Loader, Icon } from 'rsuite';\n\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\nimport vehicleAPI from '../../requests/endpoints/vehicles.endpoint';\nimport socket from '../../requests/socket/socket.client';\nimport Timer from './timer';\n\n\nconst Vehicle = ({ companyName, vehicle, companies, selectVehicle }) => {\n\n  const [loading, setLoading] = useState(false);\n\n  const arrival = async (v) => {\n    setLoading(true);\n    const moment = await vehicleAPI.arrival(v.id);\n    if (moment) {\n      v.last_record = { moment, onGarage: true };\n      socket.emit('vehicle-arrival', v);\n    }\n    setLoading(false);\n  }\n\n  const departure = async (v) => {\n    setLoading(true);\n    const moment = await vehicleAPI.departure(v.id);\n    if (moment) {\n      v.last_record = { moment, onGarage: false };\n      socket.emit('vehicle-departure', v);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <div\n        className={\n          `vehicle-card h-box\n          ${companies.selectedVehicle?.id === vehicle.id ? 'selected' : ''}\n          ${loading ? 'pulse' : ''}`\n        }\n        onClick={e => selectVehicle(companies.selectedVehicle?.id === vehicle.id ? null : vehicle)}\n      >\n        {/* Timer */}\n        {\n          vehicle.last_record.onGarage ?\n            <Timer\n              start={vehicle.last_record.moment}\n              max={moment.duration(15, 'minutes')}\n              onEnd={() => { departure(vehicle) }}\n            />\n          : null\n        }\n        {/* Vehicle data */}\n        <div className=\"vehicle-info v-box\">\n          <b className=\"license-plate\">{vehicle.license_plate}</b>\n          <span className=\"company-and-number\">{companyName} <b className=\"number\">#{vehicle.number}</b></span>\n        </div>\n        {/* Registry moment */}\n        {\n          loading ?\n          <div className=\"loader\">\n            <Loader />\n          </div> :\n          <>\n            <div className=\"last-record h-box\">\n              {\n                vehicle.last_record ?\n                  <Icon className={`icon ${vehicle.last_record.onGarage ? 'arrival' : 'departure'}`}\n                    icon={`${vehicle.last_record.onGarage ? 'caret-right' : 'caret-left'}`}\n                  />\n                  : <small className=\"no-record\">sem registro</small>\n              }\n              {\n                vehicle.last_record ?\n                  <span className=\"moment\">\n                    <small className=\"date\">\n                      {moment(vehicle.last_record.moment).format('DD/MM')}\n                    </small>\n                    <br/>\n                    {moment(vehicle.last_record.moment).format('HH:mm')}\n                  </span>\n                : null\n              }\n            </div>\n            <Button className=\"action\" appearance=\"primary\"\n              onClick={async (e) => {\n                vehicle.last_record?.onGarage ? await departure(vehicle) : await arrival(vehicle);\n              }}\n            >{vehicle.last_record?.onGarage ? 'Saída' : 'Entrada'}\n            </Button>\n          </>\n        }\n      </div>\n    </>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vehicle);","import React, { useState, useEffect } from 'react';\nimport './index.scss';\n\nimport socket from '../../requests/socket/socket.client';\nimport Vehicle from '../../shared/vehicle';\n\n\nfunction VehicleList ({ company }) {\n\n  const [showAll, setShowAll] = useState(false);\n  const [fleet, setFleet] = useState(company.fleet.slice(0, 3));\n\n  const changeView = (all) => {\n    all ? setFleet(company.fleet) : setFleet(company.fleet.slice(0, 3));\n    setShowAll(all);\n  }\n\n  useEffect(() => {\n    socket.open();\n    socket.on('vehicle-action', v => {\n      company.fleet = company.fleet.map(vehicle => (vehicle.id === v.id) ? v : vehicle);\n      changeView(showAll);\n    });\n    return () => { socket.close() }\n  }, []);\n\n  return (\n    <>\n      <div className=\"vehicle-card-list h-box\">\n\n        {fleet.map(vehicle => (\n          <Vehicle key={vehicle.id}\n            companyName={company.name}\n            vehicle={vehicle}\n          />\n        ))}\n\n      </div>\n      {company.fleet.length > 3 ?\n        <a className=\"show-more\"\n          href={`#${company.name.toLowerCase()}-exibir-${showAll ? 'mais' : 'menos'}`}\n          onClick={(e) => { changeView(!showAll) }}\n        >{`exibir ${showAll ? 'menos' : 'mais'}`}</a>\n      : null}\n    </>\n  );\n}\n\nexport default VehicleList;","import React from \"react\";\nimport \"./index.scss\";\n\nimport VehicleList from \"../../shared/vehicle-list\";\n\n\nfunction CompanyList ({ companies }) {\n\n  return (\n    <>\n      {companies.map(company => (\n        <div key={company.id}>\n          {company.fleet.length ?\n            <div className=\"company v-box\">\n              <div className=\"company-info h-box\">\n                <div className=\"company-thumbnail\"\n                  style={{\n                    borderColor: company.color,\n                    backgroundImage: `url('${company.thumbnail || '/images/no-image.jpg'}')`\n                  }}\n                ></div>\n                <h4 className=\"company-name\">{company.name}</h4>\n              </div>\n              <VehicleList company={company}/>\n            </div> : null\n          }\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default CompanyList;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport { Input, InputGroup, Toggle, Button, Whisper, Popover, Icon, Loader } from 'rsuite';\n\nimport companiesAPI from \"../../requests/endpoints/companies.endpoint\";\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\nimport CompanyList from '../../shared/company-list';\n\n\nfunction Register ({ companies, setCompanies }) {\n\n  const [loading, setLoading] = useState(false);\n  const [founded, setFounded] = useState(0);\n\n  async function load () {\n    setLoading(true);\n    const source = await companiesAPI.load();\n    const fleetsPromises = source.map(company => companiesAPI.getFleet(company.id));\n\n    Promise.all(fleetsPromises).then((fleets) => {\n      for (let i in source) {\n        source[i].fleet = fleets[i];\n      }\n\n      let founded = 0;\n      for (let company of source) {\n        founded += company.fleet.length;\n      }\n      setFounded(founded);\n\n      setCompanies(source);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <section id=\"register\" className=\"h-box\">\n      <div className=\"container\">\n        <div className=\"vehicle-search h-box\">\n          <div className=\"pagination\">\n            <span className=\"results\">\n              <b>Encontrados:</b>\n              <span>{founded}</span>\n            </span>\n          </div>\n          <div className=\"search-box h-box\">\n            <Whisper trigger=\"click\" placement=\"auto\"\n              speaker={\n                <Popover className=\"toggle-on-garage\">\n                    <Toggle onChange={value => console.log(value)} />\n                    <span>Apenas na garagem</span>\n                </Popover>\n              }>\n                <Button className=\"filter\" appearance=\"default\">\n                  <Icon icon=\"filter\" /> &nbsp;\n                  Filtrar\n              </Button>\n            </Whisper>\n            <InputGroup inside>\n              <Input placeholder=\"Procurar\" />\n              <InputGroup.Button><Icon icon=\"search\" /></InputGroup.Button>\n            </InputGroup>\n          </div>\n        </div>\n        <hr/>\n        {loading ?\n          <center>\n            <Loader />\n          </center> :\n          <CompanyList companies={companies.source}/>}\n      </div>\n    </section>\n  );\n}\n\nfunction mapStateToProps (state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import request from '../BaseRequest';\n\nclass FlowRecordsAPI {\n\n    constructor() {\n        this.uri = 'api/flow-records/';\n    }\n\n    async get (id) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'get/' + id\n            });\n\n            return response?.flowRecord;\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n\n    async getHistoric (vehicleId) {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri + 'historic/' + vehicleId\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async load () {\n\n        try {\n\n            const response = await request({\n                method: \"GET\",\n                api: this.uri\n            });\n\n            return response.items || [];\n        }\n\n        catch (ex) {\n            return [];\n        }\n    }\n\n    async remove (companyId) {\n\n        try {\n\n            const response = await request({\n                method: \"DELETE\",\n                api: this.uri + 'remove/' + companyId,\n            });\n\n            return response.message === 'company_deleted';\n        }\n\n        catch (ex) {\n            return null;\n        }\n    }\n};\n\nexport default new FlowRecordsAPI();","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './index.scss';\n\nimport { Input, DateRangePicker, InputGroup, Button, Whisper, Popover, Toggle, Icon, Loader } from 'rsuite';\nimport Chart from 'react-google-charts';\n\nimport flowRecordsAPI from '../../requests/endpoints/flow-records.endpoint';\nimport * as CompaniesActions from '../../../store/actions/companies.actions';\n\n\nfunction Timeline({ companies, selectCompany }) {\n\n  const [loading, setLoading] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [selectedCompany, setSelectedCompany] = useState(companies.source[0]);\n\n  function load () {\n    setLoading(true);\n    if (selectedCompany) {\n      const historyPromises = selectedCompany.fleet.map((vehicle) => {\n        return flowRecordsAPI.getHistoric(vehicle.id);\n      });\n\n      let chartData = [\n        [\n          { type: 'string', id:'Vehicle' },\n          { type: 'date', id: 'Start' },\n          { type: 'date', id: 'End' }\n        ]\n      ];\n\n      Promise.all(historyPromises).then((histories) => {\n        histories.forEach((history, index) => {\n          history = history.reverse().slice(0, 6);\n          for (let record of history) {\n            chartData.push([\n              selectedCompany.fleet[index].license_plate,\n              new Date(record.arrival.moment),\n              (record.departure?.moment ? new Date(record.departure.moment) : new Date())\n            ]);\n          }\n        });\n\n        setChartData(chartData);\n        setLoading(false);\n      });\n    }\n  }\n\n  useEffect(() => {\n    setSelectedCompany(companies.selectedCompany || companies.source[0]);\n    load();\n  }, [companies.selectedCompany]);\n\n  return (\n    <section id=\"timeline\" className=\"h-box\">\n      <div className=\"companies\">\n        {companies.source.map(company => (\n          company.fleet.length ?\n          <div key={company.id}\n            className={`${selectedCompany.id === company.id ? 'selected' : ''} company v-box`}\n            onClick={() => selectCompany(company)}\n          >\n            <div className=\"company-info h-box\">\n              <div className=\"company-thumbnail\"\n                style={{\n                  borderColor: company.color,\n                  backgroundImage: `url('${company.thumbnail || 'images/no-image.jpg'}')`\n                }}\n              ></div>\n              <h4 className=\"company-name\">{company.name}</h4>\n              <span className=\"company-fleet h-box\">\n                <Icon icon=\"car\" />\n                <b>{company.fleet.length}</b>\n              </span>\n            </div>\n        </div> : null\n        ))}\n      </div>\n      <div className=\"container\">\n        <div className=\"vehicle-search h-box\">\n          <DateRangePicker />\n          <div className=\"search-box h-box\">\n            <Whisper trigger=\"click\" placement=\"auto\"\n              speaker={\n                <Popover className=\"toggle-on-garage\">\n                    FILTROS\n                </Popover>\n              }>\n                <Button className=\"filter\" appearance=\"default\">\n                  <Icon icon=\"filter\" /> &nbsp;\n                  Filtrar\n              </Button>\n            </Whisper>\n            <InputGroup inside>\n              <Input placeholder=\"Procurar\" />\n              <InputGroup.Button><Icon icon=\"search\" /></InputGroup.Button>\n            </InputGroup>\n          </div>\n        </div>\n        <hr/>\n        <div className=\"container-body\">\n          <Chart\n            width=\"100%\"\n            height={300}\n            chartType=\"Timeline\"\n            loader={<center><Loader /></center>}\n            data={chartData}\n            options={{\n              showRowNumber: false\n            }}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    companies: state.companies\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(CompaniesActions, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timeline);","import React, { useState } from 'react';\nimport './index.scss';\n\nimport MenuBar from '../shared/menu-bar';\nimport Register from '../landing-page/register';\nimport Timeline from '../landing-page/timeline';\n\n\nfunction LandingPage () {\n  const [ switchScream, setSwitchScream ] = useState(\"register\");\n\n  return (\n    <>\n      <div id=\"geral\" className=\"h-box\">\n        <MenuBar current={switchScream} switchTo={(screen) => { setSwitchScream(screen) }} />\n        <main id=\"screen\">\n          {switchScream === 'register' && <Register />}\n          {switchScream === 'timeline' && <Timeline />}\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport auth from \"./Auth\";\n\n\nfunction ProtectedRoute ({ component: Component, ...rest }) {\n  return (\n    <Route {...rest} render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{ pathname: \"/flux-control-front/login\", state: { from: props.location } }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;","const INITIAL_STATE = {\n  selectedVehicle: null,\n  source: []\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n\n    case 'SET_COMPANIES':\n      return { ...state, source: action.source };\n\n    case 'SELECT_VEHICLE':\n      return { ...state, selectedVehicle: action.selectedVehicle };\n\n    case 'SELECT_COMPANY':\n      return { ...state, selectedCompany: action.selectedCompany };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport companies from './companies.reducer';\n\nexport default combineReducers ({\n    companies\n});","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport 'rsuite/dist/styles/rsuite-default.css'\n\nimport Login from './app/login';\nimport LandingPage from './app/landing-page';\nimport ProtectedRoute from \"./app/protected-route\";\nimport store from './store';\n\nfunction App () {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/flux-control-front/login\" component={Login} />\n            <ProtectedRoute exact path=\"/flux-control-front/\" component={LandingPage} />\n            <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n          </Switch>\n        </div>\n      </Provider>\n    );\n  }\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}